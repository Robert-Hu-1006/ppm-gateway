user  nginx;
worker_processes  auto;
worker_rlimit_nofile 65535;

error_log  /var/log/nginx/error.log notice;
#error_log /dev/null;
pid        /var/run/nginx.pid;

events {
    multi_accept       on;
    worker_connections 65535;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    tcp_nopush      on; #防止網路阻塞
    tcp_nodelay     on; #防止網路阻塞
    types_hash_max_size    2048;
    types_hash_bucket_size 64;
    client_max_body_size   64M;
    access_log off;
    
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    upstream dashboard {
        server grafana:3000;
    }

    server {
        listen 80;
        server_name robertcloud.net;
        include /etc/nginx/conf.d/http_headers.conf;
        location / {
            proxy_pass http://dashboard;
            include /etc/nginx/conf.d/proxy.conf;
        }
        # Proxy Grafana Live WebSocket connections.
        location /api/live/ {
            proxy_pass http://dashboard;
            include /etc/nginx/conf.d/proxy.conf;
        }
        #location /api/savills {
        #    proxy_pass http://apiserver:3010;
        #    include /etc/nginx/conf.d/proxy.conf;
        #}

        #location /json/ {
        #    root /data/;
        #    try_files $uri $uri/ =404;
        #}
        location /hls {
        types {  
            #application/x-mpegURL m3u8;
            application/vnd.apple.mpegurl m3u8 ;  
            video/mp2t ts ;  
        }
        root   /home/wwwroot/ffmpeg; 
        add_header Cache-Control no-cache ;
        add_header Access-Control-Allow-Origin *;
        }
    }
    server {
        listen 443 ssl;
        server_name robertcloud.net 52.184.87.159;
        ssl_certificate /etc/nginx/ssl.crt;
        ssl_certificate_key /etc/nginx/ssl.key;
        ssl_session_cache builtin:1000 shared:SSL:10m;
        ssl_protocols TLSv1.2;
        ssl_ciphers EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH;
        ssl_prefer_server_ciphers on;
        include /etc/nginx/conf.d/http_headers.conf;

        location / {
            proxy_pass http://dashboard;
            include /etc/nginx/conf.d/proxy.conf;
        }
        location /api/live/ {
            proxy_pass http://dashboard;
            include /etc/nginx/conf.d/proxy.conf;
        }

        #location /api/savills {
        #    proxy_pass http://apiserver:3010;
        #    include /etc/nginx/conf.d/proxy.conf;
        #}
        #location /api/savills_report {
        #    proxy_pass http://reporter:3020;
        #    include /etc/nginx/conf.d/proxy.conf;
        #}
    }
         
}
stream {
    log_format mqtt ' $realip_remote_addr  $remote_addr [$time_local] $proxy_protocol_addr $protocol $status $bytes_received ' 
                '$bytes_sent $upstream_addr';
    upstream mqtt_cluster {
        server emqx:1880;
    }
    
    # MQTT
    server {
        listen 1883 proxy_protocol;
        proxy_protocol on;
        set_real_ip_from 192.168.18.1;

        proxy_pass mqtt_cluster;
        access_log /var/log/nginx/mqtt_access.log mqtt;
        
    }
    server {
        listen 8883 ssl proxy_protocol;
        ssl_certificate /etc/nginx/ssl.crt;
        ssl_certificate_key /etc/nginx/ssl.key;
        ssl_protocols TLSv1.2;
        ssl_ciphers EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH;
        ssl_prefer_server_ciphers on;
        proxy_pass mqtt_cluster;

        proxy_protocol on;

    }
}
